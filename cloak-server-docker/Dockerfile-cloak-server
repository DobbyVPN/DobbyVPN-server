# Build stage
FROM golang:alpine AS build

WORKDIR /opt
# Install prerequisites
RUN apk add --no-cache git make

# Clone the repository
RUN git clone https://github.com/cbeuw/Cloak.git

# Set up Go module and add dependencies
WORKDIR /opt/Cloak
# RUN go mod init github.com/cbeuw/Cloak

# Add required dependencies to go.mod
RUN go mod tidy

# Build the application
RUN make server

# Final Docker image
FROM alpine:latest

RUN apk upgrade --no-cache && \
    apk add --no-cache tzdata && \
    rm -rf /var/cache/apk/*

# Environment variables
#ENV LOCAL_IP=127.0.0.1
#ENV LOCAL_PORT=12345
#ENV METHOD=shadowsocks
#ENV BYPASSUID=SB2SgfFS2LVew5OSF8L6Bw==
#ENV REDIRADDR=1.0.0.1
#ENV PRIVATEKEY=oMbG89FoR9RJGpCpOXe2hEe4DNaHt36tx2kU7F9ozEs=
#ENV ADMINUID=SB2SgfFS2LVew5OSF8L6Bw==
#ENV DOMAIN=example.com

WORKDIR /app
COPY --from=build /opt/Cloak/build/ck-server /app/ck-server
COPY cloak-server.conf /app/config.json
COPY entrypoint-cloak-server.sh /app/entrypoint.sh
RUN chmod +x /app/ck-server
RUN chmod +x /app/entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["/app/ck-server", "-c", "/app/config.json"]

